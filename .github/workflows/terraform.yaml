name: terraform infrastructure

on: 
#   push:
#     branches:
#       - master
  # pull_request:
  workflow_dispatch:
  
jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      
      - name: Terraform Initiallise
        id: init
        run: terraform init
        
      - name: Terraform Validate
        id: validate
        run: terraform validate
      
#       - name: Terraform Plan
#         id: plan
#         if: github.event_name == 'pull_request'
#         run: terraform plan
#         continue-on-error: true
        
      # - name: Update Pull Request
      #   uses: actions/github-script@0.9.0
      #   if: github.event_name == 'pull_request'
      #   env:
      #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
      #       #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
      #       #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      #       #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

      #       <details><summary>Show Plan</summary>

      #       \`\`\`\n
      #       ${process.env.PLAN}
      #       \`\`\`

      #       </details>

      #       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

      #       github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })
      
      # - name: Terraform Plan Status
      #   if: steps.plan.outcome == 'failure'
      #   run: exit 1
      
      - name: Terraform Apply
#         env:
#           SSH: ${{secrets.SSH_PRIVATE_KEY}}
        # if: github.ref == 'refs/heads/master' && github.event_name == 'wokflow_dispatch'
        run: terraform apply -auto-approve


